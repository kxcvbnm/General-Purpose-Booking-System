spring.application.name=backend

server.port=8081

# ===============================
# PostgreSQL (Docker local)
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/booking_db
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

# ===============================
# JPA / Hibernate
# ===============================
spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

security.jwt.secret=${JWT_SECRET}
security.jwt.issuer=booking-api
security.jwt.audience=booking-client
security.jwt.access-token-ttl-min=10
security.jwt.refresh-token-ttl-days=7

security.refresh.hash-secret=${REFRESH_HASH_SECRET}

booking.hours.timezone=Asia/Bangkok
booking.hours.open=08:00
booking.hours.close=20:00

# Turn on detailed Spring Security debug logs
logging.level.org.springframework.security=DEBUG

# show more web/filter info
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.web.access.intercept=DEBUG
logging.level.org.springframework.security.web.FilterChainProxy=DEBUG

app.cors.allowed-origin=http://localhost:5173